/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.6.v20141205
 * Generated at: 2019-03-03 02:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.manage.menu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menuMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/apache-maven/repo/org/apache/shiro/shiro-web/1.2.4/shiro-web-1.2.4.jar!/META-INF/shiro.tld", Long.valueOf(1436273924000L));
    _jspx_dependants.put("file:/E:/apache-maven/repo/org/apache/shiro/shiro-web/1.2.4/shiro-web-1.2.4.jar", Long.valueOf(1461399123628L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">\n");
      out.write("    <title>菜单管理</title>\n");
      out.write("    <script type=\"text/javascript\" src=\"resources/public/js/jquery.js\"></script>\n");
      out.write("    <link href=\"resources/core/css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"resources/public/css/easyui.css\"/>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"resources/public/css/icon.css\"/>\n");
      out.write("    <script type=\"text/javascript\" src=\"resources/public/js/jquery.easyui.min.js\"></script>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"resources/check/css/common.css\"/>\n");
      out.write("    <script type=\"text/javascript\" src=\"resources/check/js/jqueryUtil.js\"></script>\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        var $dg;\n");
      out.write("        var $grid;\n");
      out.write("        var typedata = [{\"type\": \"F\", \"typeName\": \"菜单\"}, {\"type\": \"O\", \"typeName\": \"操作\"}];\n");
      out.write("        $(function () {\n");
      out.write("            $dg = $(\"#dg\");\n");
      out.write("            $grid = $dg.treegrid({\n");
      out.write("                width: 'auto',\n");
      out.write("                height: $(this).height()-17,\n");
      out.write("                url: \"manage/menu/findAllMenuList\",\n");
      out.write("                rownumbers: true,\n");
      out.write("                animate: true,\n");
      out.write("                fitColumns: true,\n");
      out.write("                striped: true,\n");
      out.write("                border: true,\n");
      out.write("                idField: 'permissionId',\n");
      out.write("                treeField: 'name',\n");
      out.write("                frozenColumns: [[{\n");
      out.write("                    title: '菜单名称',\n");
      out.write("                    field: 'name',\n");
      out.write("                    editor: {\n");
      out.write("                        type: 'validatebox',\n");
      out.write("                        options: {\n");
      out.write("                            required: true\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    width: parseInt($(this).width() * 0.15),\n");
      out.write("                    formatter: function (value) {\n");
      out.write("                        return '<span style=\"color:red\">' + value + '</span>';\n");
      out.write("                    }\n");
      out.write("                }]],\n");
      out.write("                columns: [[{\n");
      out.write("                    field: 'pname',\n");
      out.write("                    title: '父菜单名称',\n");
      out.write("                    width: parseInt($(this).width() * 0.08),\n");
      out.write("                    align: 'center'\n");
      out.write("                }, {\n");
      out.write("                    field: 'sort',\n");
      out.write("                    title: '排序编码',\n");
      out.write("                    width: parseInt($(this).width() * 0.07),\n");
      out.write("                    editor: {\n");
      out.write("                        type: 'numberbox'\n");
      out.write("                    },\n");
      out.write("                    align: 'center'\n");
      out.write("                }, {\n");
      out.write("                    field: 'ifDefault',\n");
      out.write("                    title: '是否默认',\n");
      out.write("                    align: 'center',\n");
      out.write("                    width: parseInt($(this).width() * 0.07),\n");
      out.write("                    formatter: function (value, row) {\n");
      out.write("                        if (\"Y\" == row.ifDefault) return \"<font color=green>是<font>\";\n");
      out.write("                        else return \"<font color=red>否<font>\";\n");
      out.write("                    },\n");
      out.write("                }, {\n");
      out.write("                    field: 'url',\n");
      out.write("                    title: '菜单路径',\n");
      out.write("                    width: parseInt($(this).width() * 0.24),\n");
      out.write("                    align: 'left',\n");
      out.write("                    editor: {\n");
      out.write("                        type: 'validatebox',\n");
      out.write("                        options: {\n");
      out.write("                            required: true\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }, {\n");
      out.write("                    field: 'myId',\n");
      out.write("                    title: '菜单编码',\n");
      out.write("                    width: parseInt($(this).width() * 0.1),\n");
      out.write("                    align: 'left',\n");
      out.write("                    editor: {\n");
      out.write("                        type: 'validatebox',\n");
      out.write("                        options: {\n");
      out.write("                            required: true\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }, {\n");
      out.write("                    field: 'type',\n");
      out.write("                    title: '菜单类型',\n");
      out.write("                    width: parseInt($(this).width() * 0.07),\n");
      out.write("                    align: 'center',\n");
      out.write("                    formatter: function (value, row) {\n");
      out.write("                        if (\"F\" == row.type) return \"<font color=green>菜单<font>\";\n");
      out.write("                        else return \"<font color=red>操作<font>\";\n");
      out.write("                    },\n");
      out.write("                    editor: {\n");
      out.write("                        type: 'combobox',\n");
      out.write("                        options: {\n");
      out.write("                            valueField: 'type',\n");
      out.write("                            textField: 'typeName',\n");
      out.write("                            data: typedata,\n");
      out.write("                            required: true\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }, {\n");
      out.write("                    field: 'isused',\n");
      out.write("                    title: '是否启用',\n");
      out.write("                    width: parseInt($(this).width() * 0.07),\n");
      out.write("                    align: 'center',\n");
      out.write("                    formatter: function (value, row) {\n");
      out.write("                        if (\"Y\" == row.isused) return \"<font color=green>是<font>\";\n");
      out.write("                        else return \"<font color=red>否<font>\";\n");
      out.write("                    },\n");
      out.write("                    editor: {\n");
      out.write("                        type: 'checkbox',\n");
      out.write("                        options: {\n");
      out.write("                            on: 'Y',\n");
      out.write("                            off: 'N'\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }, {\n");
      out.write("                    field: 'description',\n");
      out.write("                    title: '菜单描述',\n");
      out.write("                    width: parseInt($(this).width() * 0.25),\n");
      out.write("                    align: 'left',\n");
      out.write("                    editor: \"text\"\n");
      out.write("                }]],\n");
      out.write("                toolbar: '#tb',\n");
      out.write("                onDblClickRow:menuEdit\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(\"#addFunc\").click(function () {\n");
      out.write("                var row = $dg.treegrid('getSelected');\n");
      out.write("                if (row) {\n");
      out.write("                    if (row.type == \"O\") {\n");
      out.write("                        $.messager.alert('错误提示', '该操作没有下层!', 'error');\n");
      out.write("                    } else {\n");
      out.write("                        $.modalDialog({\n");
      out.write("                            title: \"添加菜单\",\n");
      out.write("                            width: 600,\n");
      out.write("                            height: 400,\n");
      out.write("                            href: \"manage/menu/menuEditDlg\",\n");
      out.write("                            onLoad: function () {\n");
      out.write("                                if (row) {\n");
      out.write("                                    var f = $.modalDialog.handler.find(\"#form\");\n");
      out.write("                                    f.form(\"load\", {\n");
      out.write("                                        \"pid\": row.permissionId,\n");
      out.write("                                        \"pname\": row.name\n");
      out.write("                                    });\n");
      out.write("                                }\n");
      out.write("                            },\n");
      out.write("                            buttons: [{\n");
      out.write("                                text: '保存',\n");
      out.write("                                iconCls: 'icon-yes',\n");
      out.write("                                handler: function () {\n");
      out.write("                                    $.modalDialog.openner = $grid; //因为添加成功之后，需要刷新这个treegrid，所以先预定义好\n");
      out.write("                                    var f = $.modalDialog.handler.find(\"#form\");\n");
      out.write("                                    f.submit();\n");
      out.write("                                }\n");
      out.write("                            },\n");
      out.write("                                {\n");
      out.write("                                    text: '取消',\n");
      out.write("                                    iconCls: 'icon-no',\n");
      out.write("                                    handler: function () {\n");
      out.write("                                        $.modalDialog.handler.dialog('destroy');\n");
      out.write("                                        $.modalDialog.handler = undefined;\n");
      out.write("                                    }\n");
      out.write("                                }]\n");
      out.write("                        });\n");
      out.write("                    }\n");
      out.write("                } else {\n");
      out.write("                    $.modalDialog({\n");
      out.write("                        title: \"添加菜单\",\n");
      out.write("                        width: 600,\n");
      out.write("                        height: 400,\n");
      out.write("                        href: \"manage/menu/menuEditDlg\",\n");
      out.write("                        onLoad: function () {\n");
      out.write("                            if (row) {\n");
      out.write("                                var f = $.modalDialog.handler.find(\"#form\");\n");
      out.write("                                f.form(\"load\", {\n");
      out.write("                                    \"pid\": row.permissionId,\n");
      out.write("                                    \"pname\": row.pname\n");
      out.write("                                });\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        buttons: [{\n");
      out.write("                            text: '保存',\n");
      out.write("                            iconCls: 'icon-yes',\n");
      out.write("                            handler: function () {\n");
      out.write("                                $.modalDialog.openner = $grid;\n");
      out.write("                                var f = $.modalDialog.handler.find(\"#form\");\n");
      out.write("                                f.submit();\n");
      out.write("                            }\n");
      out.write("                        }, {\n");
      out.write("                            text: '取消',\n");
      out.write("                            iconCls: 'icon-no',\n");
      out.write("                            handler: function () {\n");
      out.write("                                $.modalDialog.handler.dialog('destroy');\n");
      out.write("                                $.modalDialog.handler = undefined;\n");
      out.write("                            }\n");
      out.write("                        }]\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(\"#updateFunc\").click(function () {\n");
      out.write("                menuEdit();\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(\"#delFunc\").click(function () {\n");
      out.write("                var node = $dg.treegrid('getSelected');\n");
      out.write("                if (node) {\n");
      out.write("                    $.messager.confirm(\"提示\", \"确定要删除记录吗?\",\n");
      out.write("                            function (result) {\n");
      out.write("                                if (result) {\n");
      out.write("                                    var request = $.ajax({\n");
      out.write("                                        url: \"manage/menu/delMenu\",\n");
      out.write("                                        data: {\n");
      out.write("                                            'id': node.permissionId\n");
      out.write("                                        },\n");
      out.write("                                        method: \"POST\",\n");
      out.write("                                        dataType: \"JSON\"\n");
      out.write("                                    });\n");
      out.write("\n");
      out.write("                                    request.done(function (rsp) {\n");
      out.write("                                        if (rsp.status) {\n");
      out.write("                                            $dg.treegrid('remove', node.permissionId);\n");
      out.write("                                        }\n");
      out.write("                                        $.messager.show({\n");
      out.write("                                            title: rsp.title,\n");
      out.write("                                            msg: rsp.message,\n");
      out.write("                                            timeout: 1000 * 2\n");
      out.write("                                        });\n");
      out.write("                                    });\n");
      out.write("\n");
      out.write("                                    request.fail(function () {\n");
      out.write("                                        $.messager.show({\n");
      out.write("                                            title: \"提示\",\n");
      out.write("                                            msg: \"提交错误了！\",\n");
      out.write("                                            timeout: 1000 * 2\n");
      out.write("                                        });\n");
      out.write("                                    });\n");
      out.write("                                }\n");
      out.write("                            });\n");
      out.write("                } else {\n");
      out.write("                    $.messager.show({\n");
      out.write("                        title: \"提示\",\n");
      out.write("                        msg: \"请选择一行记录!\",\n");
      out.write("                        timeout: 1000 * 2\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function menuEdit(){\n");
      out.write("            var row = $dg.treegrid('getSelected');\n");
      out.write("            if (row) {\n");
      out.write("                $.modalDialog({\n");
      out.write("                    title: \"编辑菜单\",\n");
      out.write("                    width: 600,\n");
      out.write("                    height: 400,\n");
      out.write("                    href: \"manage/menu/menuEditDlg\",\n");
      out.write("                    onLoad: function () {\n");
      out.write("                        var f = $.modalDialog.handler.find(\"#form\");\n");
      out.write("                        f.form(\"load\", row);\n");
      out.write("                    },\n");
      out.write("                    buttons: [{\n");
      out.write("                        text: '编辑',\n");
      out.write("                        iconCls: 'icon-yes',\n");
      out.write("                        handler: function () {\n");
      out.write("                            $.modalDialog.openner = $grid; //因为添加成功之后，需要刷新这个treegrid，所以先预定义好\n");
      out.write("                            var f = $.modalDialog.handler.find(\"#form\");\n");
      out.write("                            f.submit();\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                        {\n");
      out.write("                            text: '取消',\n");
      out.write("                            iconCls: 'icon-no',\n");
      out.write("                            handler: function () {\n");
      out.write("                                $.modalDialog.handler.dialog('destroy');\n");
      out.write("                                $.modalDialog.handler = undefined;\n");
      out.write("                            }\n");
      out.write("                        }]\n");
      out.write("                });\n");
      out.write("            } else {\n");
      out.write("                $.messager.show({\n");
      out.write("                    title: \"提示\",\n");
      out.write("                    msg: \"请选择一行记录!\",\n");
      out.write("                    timeout: 1000 * 2\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"rightinfo\">\n");
      out.write("    <div id=\"tb\" class=\"easyui-layout\">\n");
      out.write("        <ul class=\"toolbar\">\n");
      out.write("            ");
      if (_jspx_meth_shiro_005fhasPermission_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            ");
      if (_jspx_meth_shiro_005fhasPermission_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            ");
      if (_jspx_meth_shiro_005fhasPermission_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        </ul>\n");
      out.write("    </div>\n");
      out.write("    <table class=\"tablelist\" id=\"dg\" title=\"菜单\"></table>\n");
      out.write("\n");
      out.write("    <div class=\"tip\">\n");
      out.write("        <div class=\"tiptop\">\n");
      out.write("            <span>提示信息</span><a></a>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"tipinfo\">\n");
      out.write("            <span><img src=\"resources/core/images/ticon.png\"/></span>\n");
      out.write("            <div class=\"tipright\">\n");
      out.write("                <p>是否确认对信息的修改 ？</p>\n");
      out.write("                <cite>如果是请点击确定按钮 ，否则请点取消。</cite>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"tipbtn\">\n");
      out.write("            <input name=\"\" type=\"button\" class=\"sure\" value=\"确定\"/>&nbsp; <input\n");
      out.write("                name=\"\" type=\"button\" class=\"cancel\" value=\"取消\"/>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f0 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f0.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f0.setParent(null);
    // /WEB-INF/views/manage/menu/menuMain.jsp(307,12) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f0.setName("menuAdd");
    int _jspx_eval_shiro_005fhasPermission_005f0 = _jspx_th_shiro_005fhasPermission_005f0.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("                <li id=\"addFunc\"><span><img\n");
        out.write("                        src=\"resources/core/images/t01.png\"/></span>添加\n");
        out.write("                </li>\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f1 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f1.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f1.setParent(null);
    // /WEB-INF/views/manage/menu/menuMain.jsp(312,12) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f1.setName("menuEdit");
    int _jspx_eval_shiro_005fhasPermission_005f1 = _jspx_th_shiro_005fhasPermission_005f1.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("                <li id=\"updateFunc\"><span><img\n");
        out.write("                        src=\"resources/core/images/t02.png\"/></span>修改\n");
        out.write("                </li>\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f2 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f2.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f2.setParent(null);
    // /WEB-INF/views/manage/menu/menuMain.jsp(317,12) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f2.setName("menuDel");
    int _jspx_eval_shiro_005fhasPermission_005f2 = _jspx_th_shiro_005fhasPermission_005f2.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("                <li id=\"delFunc\"><span><img\n");
        out.write("                        src=\"resources/core/images/t03.png\"/></span>删除\n");
        out.write("                </li>\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
    return false;
  }
}
