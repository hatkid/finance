<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finance.dao.CompanyFinanceMapper">
	<insert id="insert" parameterType="CompanyFinance"
		flushCache="true" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		companyfinance(companyName,loanAmount,arrears,paid,totalArrears,channel,row_creater,row_modifier,row_create_time,row_modify_time)
		VALUES(#{companyName,jdbcType=VARCHAR},#{loanAmount,jdbcType=DOUBLE},#{arrears,jdbcType=DOUBLE},#{paid,jdbcType=DOUBLE},#{totalArrears,jdbcType=DOUBLE},#{channel,jdbcType=TINYINT},#{row_creater,jdbcType=VARCHAR},
		#{row_modifier,jdbcType=INTEGER},str_to_date(#{row_create_time},'%Y-%m-%d %H:%i:%s'),str_to_date(#{row_modify_time},'%Y-%m-%d %H:%i:%s'))
	</insert>
	
	<update id="update" parameterType="CompanyFinance">
		UPDATE companyfinance SET
		companyName = #{companyName},
		loanAmount = #{loanAmount},
		arrears = #{arrears},
		paid = #{paid},
		totalArrears = #{totalArrears},
		row_modifier = #{row_modifier,jdbcType=INTEGER},
		row_modify_time = str_to_date(#{row_modify_time},'%Y-%m-%d %H:%i:%s')
		WHERE id=#{id,jdbcType=INTEGER}
	</update>
	
	<update id="delete" parameterType="CompanyFinance">
		UPDATE companyfinance SET
		row_state = 0,
		row_modifier = #{row_modifier,jdbcType=INTEGER},
		row_modify_time = str_to_date(#{row_modify_time},'%Y-%m-%d %H:%i:%s')
		WHERE id=#{id,jdbcType=INTEGER}
	</update>

	<select id="searchByPage" resultType="CompanyFinance">
		select cf.id, cf.companyName, 
		IFNULL((select SUM(sd.total) from supplierdetail sd where sd.company_finance_id = cf.id and sd.row_state = 1),0) loanAmount, 
		cf.arrears, 
		IFNULL((select SUM(sd.paid) from supplierdetail sd where sd.company_finance_id = cf.id and sd.row_state = 1),0) paid, 
		(IFNULL((select SUM(sd.total) from supplierdetail sd where sd.company_finance_id = cf.id and sd.row_state = 1),0) + cf.arrears -IFNULL((select SUM(sd.paid) from supplierdetail sd where sd.company_finance_id = cf.id and sd.row_state = 1),0)   ) totalArrears 
		 from companyfinance cf
		where cf.row_state = 1
		<if test="companyName != null and companyName!=''">
			and cf.companyName like
			CONCAT('%',TRIM(#{companyName,jdbcType=VARCHAR}),'%')
		</if>
		order by cf.row_create_time desc
	</select>

	<select id="getCountByCompanyName" resultType="int">
		select count(*) from companyfinance c where c.companyname = #{companyName,jdbcType=VARCHAR} and c.row_state = 1 
		<if test="id != null and id != ''">
			and c.id != #{id,jdbcType=INTEGER}
		</if>
	</select>	
	
</mapper>
